// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sample_DTR_API.Models;

#nullable disable

namespace Sample_DTR_API.Migrations
{
    [DbContext(typeof(SampleDtrDbContext))]
    [Migration("20230824064611_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sample_DTR_API.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Sample_DTR_API.Models.Employee", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmpID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpId"));

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("LoginId")
                        .HasColumnType("int")
                        .HasColumnName("LoginID");

                    b.Property<string>("Mi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MI");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("EmpId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("LoginId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Sample_DTR_API.Models.Login", b =>
                {
                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LoginID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoginId"));

                    b.Property<DateTime?>("TimeInAm")
                        .HasColumnType("datetime")
                        .HasColumnName("TimeInAM");

                    b.Property<DateTime?>("TimeInPm")
                        .HasColumnType("datetime")
                        .HasColumnName("TimeInPM");

                    b.Property<DateTime?>("TimeOutAm")
                        .HasColumnType("datetime")
                        .HasColumnName("TimeOutAM");

                    b.Property<DateTime?>("TimeOutPm")
                        .HasColumnType("datetime")
                        .HasColumnName("TimeOutPM");

                    b.Property<double?>("TotalLoggedHours")
                        .HasColumnType("float");

                    b.HasKey("LoginId");

                    b.ToTable("Login", (string)null);
                });

            modelBuilder.Entity("Sample_DTR_API.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("Status1")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("Status");

                    b.HasKey("StatusId")
                        .HasName("PK_Status");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("Sample_DTR_API.Models.UserCredential", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("UserCredentials");
                });

            modelBuilder.Entity("Sample_DTR_API.Models.Employee", b =>
                {
                    b.HasOne("Sample_DTR_API.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Employees_Departments");

                    b.HasOne("Sample_DTR_API.Models.Login", "Login")
                        .WithMany("Employees")
                        .HasForeignKey("LoginId")
                        .HasConstraintName("FK_Employees_Login");

                    b.HasOne("Sample_DTR_API.Models.Status", "Status")
                        .WithMany("Employees")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_Employees_Statuses");

                    b.HasOne("Sample_DTR_API.Models.UserCredential", "User")
                        .WithMany("Employees")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Employees_UserCredentials");

                    b.Navigation("Department");

                    b.Navigation("Login");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Sample_DTR_API.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Sample_DTR_API.Models.Login", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Sample_DTR_API.Models.Status", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Sample_DTR_API.Models.UserCredential", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
